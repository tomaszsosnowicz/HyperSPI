name: HyperSPI Pico CI Build

on: [push]

jobs:

#############################
#### HyperSPI for Pico ######
#############################

  HyperSpiPico:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./rp2040
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install GNU Arm Embedded Toolchain
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '12.2.Rel1'

    - name: Build packages
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
        zip -j ../HyperSerialPico/firmware/hyperspi_pico_rp2040.zip ../HyperSerialPico/firmware/*.uf2

    - uses: actions/upload-artifact@v4
      name: Upload artifacts (commit)
      if: (startsWith(github.event.ref, 'refs/tags') != true)
      with:
        name: commit-artifact-pico
        path: |
          rp2040/HyperSerialPico/firmware/*.zip

    - uses: actions/upload-artifact@v4
      name: Upload artifacts (release)
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: release-artifact-pico
        path: |
          rp2040/HyperSerialPico/firmware/*.zip

################################
###### Publish Releases ########
################################

  publish:
    name: Publish Releases
    if: startsWith(github.event.ref, 'refs/tags')
    needs: [HyperSpiPico]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # generate environment variables
      - name: Generate environment variables from version and tag
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "preRelease=false" >> $GITHUB_ENV

      # If version contains alpha or beta, mark draft release as pre-release
      - name: Mark release as pre-release
        if: contains(env.VERSION, 'alpha') || contains(env.VERSION, 'beta')
        run: echo "preRelease=true" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: release-artifact-*
          merge-multiple: true

      # create draft release and upload artifacts
      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          name: HyperSPI ${{ env.VERSION }}
          tag_name: ${{ env.TAG }}
          files: "artifacts/**"
          draft: true
          prerelease: ${{ env.preRelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
